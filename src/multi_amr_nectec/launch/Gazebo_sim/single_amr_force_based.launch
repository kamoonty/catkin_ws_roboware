<launch>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find ridgeback_gazebo)/worlds/ridgeback_race.world" />
<arg name="formation_test_world" default="$(find multi_amr_nectec)/worlds/formation_test.world"/>
<arg name="formation_test_map" default="$(find multi_amr_nectec)/maps/formation_test.yaml"/>
 

<!-- Map server --> 
 <node pkg="map_server" type="map_server" name="map_server" args="$(arg formation_test_map)" respawn="false" >
    <param name="frame_id" value="/map" />
  </node>
        

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg formation_test_world)" />
    <arg name="paused" value="false"/>
  </include>
  
<arg name="init_pose_gazebo" value="-x 0 -y 3 -z 0 -Y 0 " />
<arg name="init_pose_rviz" value="0 0 0 0 0 0" />  
  
 

  <!-- Load AMR description, controllers, and teleop nodes. -->
 <param name="robot_description"
         command="$(find xacro)/xacro $(find amr_description)/urdf/amr.urdf_force_based.xacro
                  --inorder" /> 
  <node name="ridgeback_robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >


  </node>
 
 <!-- Refer to ridgeback_controller launch file it require to remap with amr_0/-->
 <rosparam command="load" file="$(find multi_amr_nectec)/config/control.yaml" />
  

  
    <node name="controller_spawner" pkg="controller_manager" type="spawner" 
        args="ridgeback_joint_publisher ridgeback_velocity_controller" output="screen" />
    
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization" output="screen" >
    <param name="debug" value="true" />
    <param name="debug_out_file" value="debug_odom_ekf.txt" />
    <param name="print_diagnostics" value="true" />
    <param name="frequency" value="50" />  
    <param name="two_d_mode" value="true" />
    <param name="publish_tf" value="true" />

    <param name="map_frame" value="/map" />
    <!--
    <param name="odom_frame" value="$(arg name_space)/odom" />
    <param name="base_link_frame" value="$(arg name_space)/base_link" />
    <param name="world_frame" value="$(arg name_space)/odom" />
    <remap from="base_link" to="amr_0/base_link"/>
    -->
    <param name="odom0" value="/ridgeback_velocity_controller/odom" />
    <rosparam param="odom0_config">
                [false, false, false,
                 false, false, false,
                 true, true, false,
                 false, false, true,
                 false, false, false]</rosparam>
     <param name="odom0_differential" value="false" />  
    <param name="imu0" value="/imu/data" />
    <rosparam param="imu0_config">
                [false, false, false,
                false, false, false,
                false, false, false,
                false, false, true,
                true, true, false]</rosparam> 
    <param name="imu0_differential" value="false" />                     
  </node>
  <!---->
  <node pkg="topic_tools" type="relay" name="cmd_vel_relay"
        args="/cmd_vel /ridgeback_velocity_controller/cmd_vel" />

 <!--twist marker for RVIZ just for move robot via mouse 
  <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server">
    <remap from="twist_marker_server/cmd_vel" to="/cmd_vel" />
    <rosparam command="load" file="$(find interactive_marker_twist_server)/config/planar.yaml" />
  </node>
-->
  <rosparam param="/gazebo_ros_control/pid_gains">
    front_left_wheel:
      p: 1
      i: 0.1
      d: 0
    front_right_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_left_wheel:
      p: 1
      i: 0.1
      d: 0
    rear_right_wheel:
      p: 1
      i: 0.1
      d: 0
  </rosparam>
  

 <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
 args="$(arg init_pose_gazebo) -urdf -param robot_description " output="screen"/>
 <!--transform odom to map at 100 Hz  or 10 ms-->
 <node pkg="tf" type="static_transform_publisher" name="odom_map_broadcaster" args="$(arg init_pose_rviz) /map /odom  20" />


</launch>
